# generated by datamodel-codegen:
#   filename:  openapi.yaml
#   timestamp: 2022-02-11T08:49:09+00:00

from __future__ import annotations

from enum import Enum
from typing import List, Optional

from pydantic import Field, BaseModel


class Guild(BaseModel):
    id: Optional[str] = Field(None, description="频道ID")
    name: Optional[str] = Field(None, description="频道名称")
    icon: Optional[str] = Field(None, description="频道头像地址")
    owner_id: Optional[str] = Field(None, description="创建人用户ID")
    owner: Optional[bool] = Field(None, description="当前人是否是创建人")
    member_count: Optional[int] = Field(None, description="成员数")
    max_members: Optional[int] = Field(None, description="最大成员数")
    description: Optional[str] = Field(None, description="描述")
    joined_at: Optional[str] = Field(None, description="加入时间")


class User(BaseModel):
    id: Optional[str] = Field(None, description="用户ID")
    username: Optional[str] = Field(None, description="用户名")
    avatar: Optional[str] = Field(None, description="用户头像地址")
    bot: Optional[bool] = Field(None, description="是否是机器人")
    union_openid: Optional[str] = Field(
        None, description="特殊关联应用的 openid，需要特殊申请并配置后才会返回。如需申请，请联系平台运营人员\n"
    )
    union_user_account: Optional[str] = Field(
        None, description="机器人关联的互联应用的用户信息，与union_openid关联的应用是同一个。\n如需申请，请联系平台运营人员\n"
    )


class Member(BaseModel):
    user: Optional[User] = Field(None, description="用户的频道基础信息，只有成员相关接口中会填充此信息")
    nick: Optional[str] = Field(None, description="用户的昵称")
    roles: Optional[List[str]] = Field(None, description="用户在频道内的身份组ID")
    joined_at: Optional[str] = Field(None, description="用户加入频道的时间, ISO8601格式")


class Role(BaseModel):
    id: Optional[str] = Field(None, description="身份组ID")
    name: Optional[str] = Field(None, description="名称")
    color: Optional[int] = Field(None, description="ARGB的HEX十六进制颜色值转换后的十进制数值")
    hoist: Optional[int] = Field(None, description="是否在成员列表中单独展示: 0-否, 1-是")
    number: Optional[int] = Field(None, description="人数")
    member_limit: Optional[int] = Field(None, description="成员上限")


class MessageAttachment(BaseModel):
    url: Optional[str] = Field(None, description="下载地址")


class MessageEmbedThumbnail(BaseModel):
    url: Optional[str] = Field(None, description="图片地址")


class MessageEmbedField(BaseModel):
    name: Optional[str] = Field(None, description="字段")


class MessageArkObjKv(BaseModel):
    key: Optional[str] = Field(None, description="key")
    value: Optional[str] = Field(None, description="value")


class MessageReference(BaseModel):
    message_id: Optional[str] = Field(None, description="需要引用回复的消息ID")
    ignore_get_message_error: Optional[bool] = Field(
        None, description="是否忽略获取引用消息详情错误，默认否"
    )


class MessageAudited(BaseModel):
    url: Optional[str] = Field(None, description="下载地址")


class DMS(BaseModel):
    guild_id: Optional[str] = Field(None, description="私信会话关联的频道ID")
    channel_id: Optional[str] = Field(None, description="私信会话关联的子频道ID")
    create_time: Optional[str] = Field(None, description="创建私信会话时间戳")


class Announces(BaseModel):
    guild_id: Optional[str] = Field(None, description="频道ID")
    channel_id: Optional[str] = Field(None, description="子频道ID")
    message_id: Optional[str] = Field(None, description="消息ID")


class APIPermission(BaseModel):
    path: Optional[str] = Field(
        None, description="API 接口名，例如 /guilds/{guild_id}/members/{user_id}"
    )
    method: Optional[str] = Field(None, description="请求方法，例如 GET")
    desc: Optional[str] = Field(None, description="API 接口名称，例如 获取频道信")
    auth_status: Optional[int] = Field(None, description="授权状态，auth_stats 为 1 时已授权")


class APIPermissionDemandIdentify(BaseModel):
    path: Optional[str] = Field(
        None, description="API 接口名，例如 /guilds/{guild_id}/members/{user_id}"
    )
    name: Optional[str] = Field(None, description="请求方法，例如 GET")


class GuildRole(BaseModel):
    id: Optional[str] = Field(None, description="身份组 ID")
    name: Optional[str] = Field(None, description="名称")
    color: Optional[float] = Field(
        None, description="ARGB 的 HEX 十六进制颜色值转换后的十进制数值（例：4294927682）"
    )
    hoist: Optional[float] = Field(None, description="是否在成员列表中单独展示, 0-否, 1-是")
    number: Optional[float] = Field(None, description="人数")
    member_limit: Optional[float] = Field(None, description="成员上限")


class ScheduleCreate(BaseModel):
    name: str = Field(..., description="日程名称")
    description: Optional[str] = Field(None, description="日程描述")
    start_timestamp: str = Field(..., description="日程开始时间戳(ms)")
    end_timestamp: str = Field(..., description="日程结束时间戳(ms)")
    creator: Optional[Member] = Field(None, description="创建者")
    jump_channel_id: Optional[str] = Field(None, description="日程开始时跳转到的子频道 id")
    remind_type: str = Field(..., description="日程提醒类型")


class ScheduleUpdate(BaseModel):
    name: Optional[str] = Field(None, description="日程名称")
    description: Optional[str] = Field(None, description="日程描述")
    start_timestamp: Optional[str] = Field(None, description="日程开始时间戳(ms)")
    end_timestamp: Optional[str] = Field(None, description="日程结束时间戳(ms)")
    creator: Optional[Member] = Field(None, description="创建者")
    jump_channel_id: Optional[str] = Field(None, description="日程开始时跳转到的子频道 id")
    remind_type: Optional[str] = Field(None, description="日程提醒类型")


class SessionStartLimit(BaseModel):
    total: Optional[int] = Field(None, description="每 24 小时可创建 Session 数")
    remaining: Optional[int] = Field(None, description="目前还可以创建的 Session 数")
    reset_after: Optional[int] = Field(None, description="重置计数的剩余时间(ms)")
    max_concurrency: Optional[int] = Field(None, description="每 5s 可以创建的 Session 数")


class DefaultRoleIDs(Enum):
    field_1 = 1
    field_2 = 2
    field_4 = 4
    field_5 = 5


class ChannelType(Enum):
    integer_0 = 0
    integer_1 = 1
    integer_2 = 2
    integer_3 = 3
    integer_4 = 4
    integer_10005 = 10005
    integer_10006 = 10006
    integer_10007 = 10007


class ChannelSubType(Enum):
    integer_0 = 0
    integer_1 = 1
    integer_2 = 2
    integer_3 = 3


class PrivateType(Enum):
    integer_0 = 0
    integer_1 = 1
    integer_2 = 2


class SpeakPermission(Enum):
    integer_0 = 0
    integer_1 = 1
    integer_2 = 2


class Application(BaseModel):
    __root__: str = Field(
        ...,
        description="应用子频道的应用类型:\n  * `1000000` - 王者开黑大厅\n  * `1000001` - 互动小游戏\n  * `1000010` - 腾讯投票\n  * `1000051` - 飞车开黑大厅\n  * `1000050` - 日程提醒\n  * `1000070` - CoDM 开黑大厅\n  * `1010000` - 和平精英开黑大厅\n\n| 由于QQ频道还在持续的迭代中，应用子频道的 application_id 还会持续新增，后续会不定期补充到文档中\n",
    )


class Permissions(BaseModel):
    __root__: str = Field(
        ...,
        description='* 用户/角色拥有的(子)频道权限\n\n* 权限是QQ频道管理频道成员的一种方式，管理员可以对不同的人、不同的子频道设置特定的权限。用户的权限包括个人权限和身份组权限两部分，最终生效是取两种权限的并集。\n\n* 权限使用位图表示，传递时序列化为十进制数值字符串。如权限值为0x6FFF，会被序列化为十进制"28671"。\n\n  | 权限 | 值 | 描述 |\n  | --- | --- | --- |\n  | 可查看子频道 | 0x0000000001 (1 << 0) | 支持`指定成员`可见类型，支持`身份组`可见类型 |\n  | 可管理子频道 | 0x0000000002 (1 << 1) | 创建者、管理员、子频道管理员都具有此权限 |\n  | 可发言子频道 | 0x0000000004 (1 << 2) | 支持`指定成员`发言类型，支持`身份组`发言类型  |\n',
    )


class RemindType(BaseModel):
    __root__: str = Field(
        ...,
        description="日程提醒类型:\n  * `0` - 不提醒\n  * `1` - 开始时提醒\n  * `2` - 开始前 5 分钟提醒\n  * `3` - 开始前 15 分钟提醒\n  * `4` - 开始前 30 分钟提醒\n  * `5` - 开始前 60 分钟提醒\n",
    )


class AudioControlStatus(BaseModel):
    __root__: int = Field(
        ...,
        description="播放状态:\n  * `0` - 开始播放操作\n  * `1` - 暂停播放操作\n  * `2` - 继续播放操作\n  * `3` - 停止播放操作\n",
    )


class ReactionTargetType(BaseModel):
    __root__: str = Field(
        ...,
        description="表态对象类型:\n  * `0` - 消息\n  * `1` - 帖子\n  * `2` - 评论\n  * `3` - 回复   \n",
    )


class EmojiType(BaseModel):
    __root__: int = Field(
        ..., description="表情类型 :\n  * `1` - 系统表情\n  * `2` - emoji表情\n"
    )


class EmojiID(BaseModel):
    __root__: str = Field(
        ...,
        description="emoji 表情 :\n  本处列表仅包含部分表情，随着时间推移，可能会与线上情况相比有所增减。建议开发者如果要基于表情表态来做逻辑，优先针对已知的QQ系统表情类型（EmojiType=1）来处理。\n\n  | 表情ID | 表情含义 |\n  | ---  | ---  |\n  | 0    | 惊讶   |\n  | 1    | 撇嘴   |\n  | 2    | 色    |\n  | 3    | 发呆   |\n  | 4    | 得意   |\n  | 5    | 流泪   |\n  | 6    | 害羞   |\n  | 7    | 闭嘴   |\n  | 8    | 睡    |\n  | 9    | 大哭   |\n  | 10   | 尴尬   |\n  | 11   | 发怒   |\n  | 12   | 调皮   |\n  | 13   | 呲牙   |\n  | 14   | 微笑   |\n  | 15   | 难过   |\n  | 16   | 酷    |\n  | 18   | 抓狂   |\n  | 19   | 吐    |\n  | 20   | 偷笑   |\n  | 21   | 可爱   |\n  | 22   | 白眼   |\n  | 23   | 傲慢   |\n  | 24   | 饥饿   |\n  | 25   | 困    |\n  | 26   | 惊恐   |\n  | 27   | 流汗   |\n  | 28   | 憨笑   |\n  | 29   | 悠闲   |\n  | 30   | 奋斗   |\n  | 31   | 咒骂   |\n  | 32   | 疑问   |\n  | 33   | 嘘    |\n  | 34   | 晕    |\n  | 35   | 折磨   |\n  | 36   | 衰    |\n  | 37   | 骷髅   |\n  | 38   | 敲打   |\n  | 39   | 再见   |\n  | 41   | 发抖   |\n  | 42   | 爱情   |\n  | 43   | 跳跳   |\n  | 46   | 猪头   |\n  | 49   | 拥抱   |\n  | 53   | 蛋糕   |\n  | 54   | 闪电   |\n  | 55   | 炸弹   |\n  | 56   | 刀    |\n  | 57   | 足球   |\n  | 59   | 便便   |\n  | 60   | 咖啡   |\n  | 61   | 饭    |\n  | 63   | 玫瑰   |\n  | 64   | 凋谢   |\n  | 66   | 爱心   |\n  | 67   | 心碎   |\n  | 69   | 礼物   |\n  | 74   | 太阳   |\n  | 75   | 月亮   |\n  | 76   | 赞    |\n  | 77   | 踩    |\n  | 78   | 握手   |\n  | 79   | 胜利   |\n  | 85   | 飞吻   |\n  | 86   | 怄火   |\n  | 89   | 西瓜   |\n  | 96   | 冷汗   |\n  | 97   | 擦汗   |\n  | 98   | 抠鼻   |\n  | 99   | 鼓掌   |\n  | 100  | 糗大了  |\n  | 101  | 坏笑   |\n  | 102  | 左哼哼  |\n  | 103  | 右哼哼  |\n  | 104  | 哈欠   |\n  | 105  | 鄙视   |\n  | 106  | 委屈   |\n  | 107  | 快哭了  |\n  | 108  | 阴险   |\n  | 109  | 亲亲   |\n  | 110  | 吓    |\n  | 111  | 可怜   |\n  | 112  | 菜刀   |\n  | 113  | 啤酒   |\n  | 114  | 篮球   |\n  | 115  | 乒乓   |\n  | 116  | 示爱   |\n  | 117  | 瓢虫   |\n  | 118  | 抱拳   |\n  | 119  | 勾引   |\n  | 120  | 拳头   |\n  | 121  | 差劲   |\n  | 122  | 爱你   |\n  | 123  | NO   |\n  | 124  | OK   |\n  | 125  | 转圈   |\n  | 126  | 磕头   |\n  | 127  | 回头   |\n  | 128  | 跳绳   |\n  | 129  | 挥手   |\n  | 130  | 激动   |\n  | 131  | 街舞   |\n  | 132  | 献吻   |\n  | 133  | 左太极  |\n  | 134  | 右太极  |\n  | 136  | 双喜   |\n  | 137  | 鞭炮   |\n  | 138  | 灯笼   |\n  | 140  | K歌   |\n  | 144  | 喝彩   |\n  | 145  | 祈祷   |\n  | 146  | 爆筋   |\n  | 147  | 棒棒糖  |\n  | 148  | 喝奶   |\n  | 151  | 飞机   |\n  | 158  | 钞票   |\n  | 168  | 药    |\n  | 169  | 手枪   |\n  | 171  | 茶    |\n  | 172  | 眨眼睛  |\n  | 173  | 泪奔   |\n  | 174  | 无奈   |\n  | 175  | 卖萌   |\n  | 176  | 小纠结  |\n  | 177  | 喷血   |\n  | 178  | 斜眼笑  |\n  | 179  | doge |\n  | 180  | 惊喜   |\n  | 181  | 骚扰   |\n  | 182  | 笑哭   |\n  | 183  | 我最美  |\n  | 184  | 河蟹   |\n  | 185  | 羊驼   |\n  | 187  | 幽灵   |\n  | 188  | 蛋    |\n  | 190  | 菊花   |\n  | 192  | 红包   |\n  | 193  | 大笑   |\n  | 194  | 不开心  |\n  | 197  | 冷漠   |\n  | 198  | 呃    |\n  | 199  | 好棒   |\n  | 200  | 拜托   |\n  | 201  | 点赞   |\n  | 202  | 无聊   |\n  | 203  | 托脸   |\n  | 204  | 吃    |\n  | 205  | 送花   |\n  | 206  | 害怕   |\n  | 207  | 花痴   |\n  | 208  | 小样儿  |\n  | 210  | 飙泪   |\n  | 211  | 我不看  |\n  | 212  | 托腮   |\n  | 214  | 啵啵   |\n  | 215  | 糊脸   |\n  | 216  | 拍头   |\n  | 217  | 扯一扯  |\n  | 218  | 舔一舔  |\n  | 219  | 蹭一蹭  |\n  | 220  | 拽炸天  |\n  | 221  | 顶呱呱  |\n  | 222  | 抱抱   |\n  | 223  | 暴击   |\n  | 224  | 开枪   |\n  | 225  | 撩一撩  |\n  | 226  | 拍桌   |\n  | 227  | 拍手   |\n  | 228  | 恭喜   |\n  | 229  | 干杯   |\n  | 230  | 嘲讽   |\n  | 231  | 哼    |\n  | 232  | 佛系   |\n  | 233  | 掐一掐  |\n  | 234  | 惊呆   |\n  | 235  | 颤抖   |\n  | 236  | 啃头   |\n  | 237  | 偷看   |\n  | 238  | 扇脸   |\n  | 239  | 原谅   |\n  | 240  | 喷脸   |\n  | 241  | 生日快乐 |\n  | 242  | 头撞击  |\n  | 243  | 甩头   |\n  | 244  | 扔狗   |\n  | 245  | 加油必胜 |\n  | 246  | 加油抱抱 |\n  | 247  | 口罩护体 |\n  | 260  | 办公   |\n  | 261  | 忙碌   |\n  | 262  | 心累   |\n  | 263  | 沧桑   |\n  | 264  | 捂脸   |\n  | 265  | 刷手机  |\n  | 266  | 嫌弃   |\n  | 267  | 头秃   |\n  | 268  | 问号   |\n  | 269  | 暗中观察 |\n  | 270  | 尴尬   |\n  | 271  | 吃瓜   |\n  | 272  | 呵呵   |\n  | 273  | 柠檬   |\n  | 274  | 南    |\n  | 👗   | 连衣裙  |\n  | 😏   | 哼哼   |\n  | 😄   | 高兴   |\n  | 😔   | 失落   |\n  | 😍   | 花痴   |\n  | 😉   | 媚眼   |\n  | ☺    | 可爱   |\n  | 😜   | 淘气   |\n  | 😁   | 呲牙   |\n  | 😝   | 吐舌   |\n  | 😰   | 紧张   |\n  | 😓   | 汗    |\n  | 😚   | 亲亲   |\n  | 😌   | 羞涩   |\n  | 😊   | 嘿嘿   |\n  | ❔    | 问好   |\n  | ❕    | 叹号   |\n  | ❌    | 错误   |\n  | ☎    | 电话   |\n  | 📷   | 相机   |\n  | 📠   | 传真   |\n  | 💻   | 电脑   |\n  | 🎥   | 摄影机  |\n  | 🎤   | 话筒   |\n  | 🔫   | 手枪   |\n  | 💿   | 光碟   |\n  | 💓   | 爱心   |\n  | ✨    | 闪光   |\n  | ♣    | 扑克   |\n  | 🀄   | 麻将   |\n  | 〽    | 股票   |\n  | 🎰   | 老虎机  |\n  | 🚥   | 信号灯  |\n  | 🚧   | 路障   |\n  | 🎸   | 吉他   |\n  | 💈   | 理发厅  |\n  | 🛀   | 浴缸   |\n  | 🚽   | 马桶   |\n  | 🏠   | 家    |\n  | ⛪    | 教堂   |\n  | ⭕    | 正确   |\n  | ⛄    | 雪人   |\n  | 🌙   | 月亮   |\n  | ☔    | 雨天   |\n  | ☀    | 晴天   |\n  | ☁    | 云朵   |\n  | 💄   | 口红   |\n  | 👟   | 鞋子   |\n  | 👕   | 衣服   |\n  | 👙   | 内衣   |\n  | 👜   | 包    |\n  | 🌂   | 雨伞   |\n  | 👢   | 鞋子   |\n  | 👠   | 高跟鞋  |\n  | 🏦   | 银行   |\n  | 👒   | 帽子   |\n  | 🐭   | 老鼠   |\n  | 🐳   | 海豚   |\n  | 🐧   | 企鹅   |\n  | 👼   | 天使   |\n  | 🐯   | 老虎   |\n  | 🐶   | 狗    |\n  | 🐠   | 鱼    |\n  | 🐛   | 虫    |\n  | 👻   | 幽灵   |\n  | 🐸   | 青蛙   |\n  | 🐔   | 公鸡   |\n  | 🐮   | 牛    |\n  | 🐨   | 树懒   |\n  | 🐤   | 小鸡   |\n  | 💀   | 骷髅   |\n  | 🐷   | 猪    |\n  | 🐙   | 章鱼   |\n  | 🐵   | 猴    |\n  | 👦   | 男孩   |\n  | 👧   | 女孩   |\n  | 👨   | 爸爸   |\n  | 👩   | 妈妈   |\n  | ⛵    | 船    |\n  | 🚌   | 公交   |\n  | 🚀   | 火箭   |\n  | 🐎   | 骑马   |\n  | 🚲   | 自行车  |\n  | 🚤   | 快艇   |\n  | 🚗   | 汽车   |\n  | 🚄   | 列车   |\n  | ✈    | 飞机   |\n  | 🔒   | 锁    |\n  | 🔑   | 钥匙   |\n  | 📫   | 文件   |\n  | ♨    | 热    |\n  | 💉   | 打针   |\n  | 💩   | 便便   |\n  | 👣   | 脚印   |\n  | 🏥   | 医院   |\n  | ⚡    | 闪电   |\n  | 💤   | 睡觉   |\n  | 💰   | 钱    |\n  | 🏆   | 奖杯   |\n  | 🔥   | 火    |\n  | 🏨   | 酒店   |\n  | 🏧   | 取款机  |\n  | 🏪   | 超市   |\n  | 🚹   | 男性   |\n  | 💦   | 水    |\n  | 🚺   | 女性   |\n  | 💨   | 吹气   |\n  | 📱   | 手机   |\n  | ⭐    | 星星   |\n  | 🔔   | 铃铛   |\n  | 👑   | 皇冠   |\n  | 💣   | 炸弹   |\n  | 💍   | 戒指   |\n  | 🐚   | 海螺   |\n  | 🎈   | 气球   |\n  | 🎀   | 蝴蝶结  |\n  | 💝   | 礼物   |\n  | 🌴   | 椰子树  |\n  | 🎉   | 庆祝   |\n  | 🌹   | 玫瑰   |\n  | 🎄   | 圣诞树  |\n  | 🚬   | 吸烟   |\n  | 💊   | 药丸   |\n  | 🍉   | 西瓜   |\n  | 🍓   | 草莓   |\n  | 🍊   | 橙子   |\n  | 🍎   | 苹果   |\n  | ☕    | 咖啡   |\n  | 🍸   | 高脚杯  |\n  | 🍻   | 干杯   |\n  | 🍺   | 啤酒   |\n  | 🍟   | 薯条   |\n  | 🍳   | 煎蛋   |\n  | 🙏   | 合十   |\n  | 🍔   | 汉堡   |\n  | 🍞   | 起司   |\n  | 🎂   | 蛋糕   |\n  | 🍣   | 寿司   |\n  | 🍧   | 刨冰   |\n  | 🍙   | 饭团   |\n  | 🍜   | 拉面   |\n  | 🍝   | 意面   |\n  | 🍚   | 米饭   |\n  | 👂   | 耳朵   |\n  | 👄   | 嘴唇   |\n  | 👃   | 鼻子   |\n  | 👀   | 眼睛   |\n  | 👇   | 向下   |\n  | 👆   | 向上   |\n  | 👉   | 向右   |\n  | 👈   | 向左   |\n  | 👌   | 好的   |\n  | 👎   | 鄙视   |\n  | ✌    | 胜利   |\n  | 👏   | 鼓掌   |\n  | ☝    | 向上   |\n  | 👍   | 厉害   |\n  | 👊   | 拳头   |\n  | 💪   | 肌肉   |\n  | 😂   | 激动   |\n  | 😱   | 害怕   |\n  | 😭   | 大哭   |\n  | 😘   | 飞吻   |\n  | 😳   | 瞪眼   |\n  | 😒   | 不屑   |\n",
    )


class Channel(BaseModel):
    id: Optional[str] = Field(None, description="子频道ID")
    guild_id: Optional[str] = Field(None, description="频道ID")
    name: Optional[str] = Field(None, description="子频道名称")
    type: Optional[ChannelType] = None
    sub_type: Optional[ChannelSubType] = None
    position: Optional[int] = Field(None, description="排序值")
    parent_id: Optional[str] = Field(
        None, description="所属分组 id，仅对子频道有效，对 子频道分组（ChannelType=4） 无效"
    )
    owner_id: Optional[str] = Field(None, description="创建人 id")
    private_type: Optional[PrivateType] = None
    speak_permission: Optional[SpeakPermission] = None
    application_id: Optional[Application] = None


class ChannelPermissions(BaseModel):
    channel_id: Optional[str] = Field(None, description="子频道ID")
    user_id: Optional[str] = Field(None, description="用户ID")
    role_id: Optional[str] = Field(None, description="身份组ID,用户 id 或 身份组 id，只会返回其中之一")
    permissions: Optional[Permissions] = None


class MessageEmbed(BaseModel):
    title: Optional[str] = Field(None, description="标题")
    prompt: Optional[str] = Field(None, description="消息弹窗内容")
    thumbnail: Optional[MessageEmbedThumbnail] = Field(None, description="缩略图")
    fields: Optional[List[MessageEmbedField]] = Field(None, description="embed 字段数据")


class MessageArkObj(BaseModel):
    obj_kv: Optional[List[MessageArkObjKv]] = Field(None, description="ark objkv列表")


class Schedule(BaseModel):
    id: Optional[str] = Field(None, description="日程ID")
    name: Optional[str] = Field(None, description="日程名称")
    description: Optional[str] = Field(None, description="日程描述")
    start_timestamp: Optional[str] = Field(None, description="日程开始时间戳(ms)")
    end_timestamp: Optional[str] = Field(None, description="日程结束时间戳(ms)")
    creator: Optional[Member] = Field(None, description="创建者")
    jump_channel_id: Optional[str] = Field(None, description="日程开始时跳转到的子频道 id")
    remind_type: Optional[RemindType] = None


class Emoji(BaseModel):
    id: Optional[EmojiID] = None
    type: Optional[EmojiType] = None


class ReactionTarget(BaseModel):
    id: Optional[str] = Field(None, description="表态对象ID")
    type: Optional[ReactionTargetType] = None


class AudioControl(BaseModel):
    audio_url: Optional[str] = Field(None, description="音频数据的url status为0时传")
    text: Optional[str] = Field(
        None, description="状态文本（比如：简单爱-周杰伦），可选，status为0时传，其他操作不传"
    )
    status: Optional[AudioControlStatus] = None


class APIPermissionDemand(BaseModel):
    guild_id: Optional[str] = Field(None, description="申请接口权限的频道 id")
    channel_id: Optional[str] = Field(None, description="接口权限需求授权链接发送的子频道 id")
    api_identify: Optional[APIPermissionDemandIdentify] = Field(
        None, description="权限接口唯一标识"
    )
    title: Optional[str] = Field(None, description="接口权限链接中的接口权限描述信息")
    desc: Optional[str] = Field(None, description="接口权限链接中的机器人可使用功能的描述信息")


class ChannelCreate(BaseModel):
    name: str = Field(..., description="子频道名称")
    type: ChannelType
    sub_type: ChannelSubType
    position: Optional[int] = Field(None, description="排序值")
    parent_id: Optional[str] = Field(
        None, description="所属分组 id，仅对子频道有效，对 子频道分组（ChannelType=4） 无效"
    )
    private_type: Optional[PrivateType] = None
    private_user_ids: Optional[List[str]] = Field(None, description="子频道私密类型成员 ID")


class ChannelUpdate(BaseModel):
    name: Optional[str] = Field(None, description="子频道名称")
    type: Optional[ChannelType] = None
    sub_type: Optional[ChannelSubType] = None
    position: Optional[int] = Field(None, description="排序值")
    parent_id: Optional[str] = Field(
        None, description="所属分组 id，仅对子频道有效，对 子频道分组（ChannelType=4） 无效"
    )
    private_type: Optional[PrivateType] = None


class MessageArkKv(BaseModel):
    key: Optional[str] = Field(None, description="key")
    value: Optional[str] = Field(None, description="value")
    obj: Optional[List[MessageArkObj]] = Field(None, description="ark obj类型的列表")


class MessageReaction(BaseModel):
    user_id: Optional[str] = Field(None, description="用户ID")
    guild_id: Optional[str] = Field(None, description="频道ID")
    channel_id: Optional[str] = Field(None, description="子频道ID")
    target: Optional[ReactionTarget] = Field(None, description="表态对象")
    emoji: Optional[Emoji] = Field(None, description="表态所用表情")


class MessageArk(BaseModel):
    template_id: Optional[int] = Field(None, description="ark模板id（需要先申请）")
    kv: Optional[List[MessageArkKv]] = Field(None, description="kv值列表")


class MessageSend(BaseModel):
    content: Optional[str] = Field(None, description="消息内容，文本内容，支持内嵌格式")
    embed: Optional[MessageEmbed] = Field(None, description="embed 消息，一种特殊的 ark")
    ark: Optional[MessageArk] = Field(None, description="ark 消息")
    message_reference: Optional[MessageReference] = Field(None, description="引用消息")
    image: Optional[str] = Field(None, description="图片url地址，平台会转存该图片，用于下发图片消息")
    msg_id: Optional[str] = Field(
        None, description="要回复的消息id(Message.id), 在 AT_CREATE_MESSAGE 事件中获取"
    )


class Message(BaseModel):
    id: Optional[str] = Field(None, description="消息ID")
    channel_id: Optional[str] = Field(None, description="子频道ID")
    guild_id: Optional[str] = Field(None, description="频道ID")
    content: Optional[str] = Field(None, description="消息内容")
    timestamp: Optional[str] = Field(None, description="消息创建时间,ISO8601 timestamp")
    edited_timestamp: Optional[str] = Field(
        None, description="消息编辑时间,ISO8601 timestamp"
    )
    mention_everyone: Optional[bool] = Field(None, description="是否是@全员消息")
    author: Optional[User] = Field(None, description="消息创建者")
    attachments: Optional[List[MessageAttachment]] = Field(None, description="附件")
    embeds: Optional[List[MessageEmbed]] = Field(None, description="embed")
    mentions: Optional[List[User]] = Field(None, description="消息中@的人")
    member: Optional[Member] = None
    ark: Optional[MessageArk] = Field(None, description="ark消息")
    seq: Optional[int] = Field(
        None, description="用于消息间的排序，seq 在同一子频道中按从先到后的顺序递增，不同的子频道之前消息无法排序\n"
    )
